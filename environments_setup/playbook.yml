- hosts: production
  pre_tasks:
    - name: Force Gather facts
      setup:
      delegate_to: "{{ item }}"
      delegate_facts: True
      when: hostvars[item]['ansible_default_ipv4'] is not defined
      with_items: "production"
      tags: create_integration
  roles:
    - setupEnvironments
    - { role: copyFilesForVagrantAndAnsible, tags: ['create_integration'] }
    - { role: installVirtualbox, tags: ['create_integration'] }
    - { role: andrewrothstein.vagrant, tags: ['create_integration'] }
    - { role: elastic.elasticsearch, es_instance_name: "node1", es_enable_xpack: true, es_xpack_features: ['security'],es_api_host: "10.5.82.93",es_api_port: 9200, es_config: {network.host: "10.5.82.93", http.port: 9200} }
    - { role: geerlingguy.kibana, become: yes, kibana_server_port: 5603, kibana_server_host: "10.5.82.93", kibana_elasticsearch_url: "http://10.5.82.93:9200", kibana_es_user: "{{ es_kibana_user }}", kibana_es_password: "{{ es_kibana_pass }}" }
    - andrewrothstein.kafka
    - andrewrothstein.spark
    - role: franklinkim.environment
      become: yes
      environment_config:
        ES_HOST: "{{ es_addr }}"
        ES_PORT: "{{ es_port }}"
        ES_ADMIN_USER: "{{ es_admin_user }}"
        ES_ADMIN_PASS: "{{ es_admin_pass }}"
        KIBANA_HOST: "{{ kibana_addr }}"
        KIBANA_PORT: "{{ kibana_port }}"
  tasks:
  - name: Destroy vagrant VM (if change in vagrant file detected)
    command: chdir=~/project/ vagrant destroy -f
    when: vagrantfile_edited == 1
    tags: create_integration
  - name: Create vagrant's VM
    command: chdir=~/project/ vagrant up
    tags: create_integration
- hosts: integration
  roles:
  - setupEnvironments
  - { role: elastic.elasticsearch, es_enable_xpack: true, es_xpack_features: ['security'] , es_instance_name: "node1",es_api_host: "172.17.177.20",es_api_port: 9201, es_config: {network.host: "172.17.177.20", http.port: 9201} }
  - { role: geerlingguy.kibana, become: yes, kibana_server_port: 5602, kibana_elasticsearch_url: "http://172.17.177.20:9201", kibana_es_user: "{{ es_kibana_user }}", kibana_es_password: "{{ es_kibana_pass }}" }
  - andrewrothstein.kafka
  - andrewrothstein.spark
  - role: franklinkim.environment
    become: yes
    environment_config:
      ES_HOST: "{{ es_addr }}"
      ES_PORT: "{{ es_port }}"
      ES_ADMIN_USER: "{{ es_admin_user }}"
      ES_ADMIN_PASS: "{{ es_admin_pass }}"
      KIBANA_HOST: "{{ kibana_addr }}"
      KIBANA_PORT: "{{ kibana_port }}"
- hosts: prod_integ
  roles:
  - copyProjectFiles
  tasks:
  - name: Ensure necessary packages are installed
    apt: name={{ item }} state=latest
    become: yes
    with_items:
      - python
      - python-pip
      - python3
      - python3-pip
      - openjdk-8-jdk
